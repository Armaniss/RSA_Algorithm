<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ModelDataSet" targetNamespace="http://tempuri.org/ModelDataSet.xsd" xmlns:mstns="http://tempuri.org/ModelDataSet.xsd" xmlns="http://tempuri.org/ModelDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="con" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="con (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.RSA_Algorithm.Properties.Settings.GlobalReference.Default.con" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataForEncryptionTableAdapter" GeneratorDataComponentClassName="DataForEncryptionTableAdapter" Name="DataForEncryption" UserDataComponentName="DataForEncryptionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="con (Settings)" DbObjectName="dbo.DataForEncryption" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DataForEncryption] WHERE (([Id] = @Original_Id) AND ((@IsNull_EncryptedResult = 1 AND [EncryptedResult] IS NULL) OR ([EncryptedResult] = @Original_EncryptedResult)) AND ((@IsNull_NValue = 1 AND [NValue] IS NULL) OR ([NValue] = @Original_NValue)) AND ((@IsNull_EValue = 1 AND [EValue] IS NULL) OR ([EValue] = @Original_EValue)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EncryptedResult" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EncryptedResult" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_EncryptedResult" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EncryptedResult" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NValue" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_NValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="NValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EValue" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_EValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DataForEncryption] ([Id], [EncryptedResult], [NValue], [EValue]) VALUES (@Id, @EncryptedResult, @NValue, @EValue);
SELECT Id, EncryptedResult, NValue, EValue FROM DataForEncryption WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@EncryptedResult" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EncryptedResult" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@NValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="NValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@EValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, EncryptedResult, NValue, EValue FROM dbo.DataForEncryption</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DataForEncryption] SET [Id] = @Id, [EncryptedResult] = @EncryptedResult, [NValue] = @NValue, [EValue] = @EValue WHERE (([Id] = @Original_Id) AND ((@IsNull_EncryptedResult = 1 AND [EncryptedResult] IS NULL) OR ([EncryptedResult] = @Original_EncryptedResult)) AND ((@IsNull_NValue = 1 AND [NValue] IS NULL) OR ([NValue] = @Original_NValue)) AND ((@IsNull_EValue = 1 AND [EValue] IS NULL) OR ([EValue] = @Original_EValue)));
SELECT Id, EncryptedResult, NValue, EValue FROM DataForEncryption WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@EncryptedResult" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EncryptedResult" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@NValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="NValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@EValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EncryptedResult" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EncryptedResult" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_EncryptedResult" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EncryptedResult" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NValue" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_NValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="NValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EValue" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_EValue" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="EValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="EncryptedResult" DataSetColumn="EncryptedResult" />
              <Mapping SourceColumn="NValue" DataSetColumn="NValue" />
              <Mapping SourceColumn="EValue" DataSetColumn="EValue" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ModelDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ModelDataSet" msprop:Generator_UserDSName="ModelDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DataForEncryption" msprop:Generator_TableClassName="DataForEncryptionDataTable" msprop:Generator_TableVarName="tableDataForEncryption" msprop:Generator_TablePropName="DataForEncryption" msprop:Generator_RowDeletingName="DataForEncryptionRowDeleting" msprop:Generator_RowChangingName="DataForEncryptionRowChanging" msprop:Generator_RowEvHandlerName="DataForEncryptionRowChangeEventHandler" msprop:Generator_RowDeletedName="DataForEncryptionRowDeleted" msprop:Generator_UserTableName="DataForEncryption" msprop:Generator_RowChangedName="DataForEncryptionRowChanged" msprop:Generator_RowEvArgName="DataForEncryptionRowChangeEvent" msprop:Generator_RowClassName="DataForEncryptionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="EncryptedResult" msprop:Generator_ColumnVarNameInTable="columnEncryptedResult" msprop:Generator_ColumnPropNameInRow="EncryptedResult" msprop:Generator_ColumnPropNameInTable="EncryptedResultColumn" msprop:Generator_UserColumnName="EncryptedResult" type="xs:long" minOccurs="0" />
              <xs:element name="NValue" msprop:Generator_ColumnVarNameInTable="columnNValue" msprop:Generator_ColumnPropNameInRow="NValue" msprop:Generator_ColumnPropNameInTable="NValueColumn" msprop:Generator_UserColumnName="NValue" type="xs:long" minOccurs="0" />
              <xs:element name="EValue" msprop:Generator_ColumnVarNameInTable="columnEValue" msprop:Generator_ColumnPropNameInRow="EValue" msprop:Generator_ColumnPropNameInTable="EValueColumn" msprop:Generator_UserColumnName="EValue" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DataForEncryption" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>